/* style.css */
@font-face {
    font-family: 'BerkeleyMono';
    src: url('font/BerkeleyMono-Regular.woff2') format('woff2'),
         url('font/BerkeleyMono-Regular.woff') format('woff');
    font-weight: 400;
    font-style: normal;
  }
@font-face {
    font-family: 'BerkeleyMono';
    src: url('font/BerkeleyMono-Bold.woff2') format('woff2'),
         url('font/BerkeleyMono-Bold.woff') format('woff');
    font-weight: 700;
    font-style: normal;
  }
body {
    font-family: 'BerkeleyMono', sans-serif;
    text-align: left;
    margin: 0.5;
    padding: 0;
    line-height: 1.1;
  }

  bigTitle {
    font-family: 'Montserrat', sans-serif;
    font-size: 10em;
    font-weight: bold;
    position: relative;
    top: 0px;        
    left: 5px;       
    margin: 0;      
    color: #111;
    line-height: 1; 
  }

  h1 {
    font-family: 'Montserrat', sans-serif;
    font-size: 1.25em;

  }
  
  .wrapper {
    width: 100%;
    margin-inline: auto;
    position: relative;
    height: 20px;
    overflow: hidden;
  }
  
  @keyframes scrollLeft {
    to {
      left: -160px;
    }
  }
  
  .item {
    width: 100px;
    height: 20px;
    font-weight: bold;
    position: absolute;
    left: max(calc(100px * 10), 100%);
    animation-name: scrollLeft;
    animation-duration: 15s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
  }
  
  .item1 {
    animation-delay: calc(15s / 10 * (10 - 1) * -1);
  }
  
  .item2 {
    animation-delay: calc(15s / 10 * (10 - 2) * -1);
  }
  
  .item3 {
    animation-delay: calc(15s / 10 * (10 - 3) * -1);
  }
  
  .item4 {
    animation-delay: calc(15s / 10 * (10 - 4) * -1);
  }
  
  .item5 {
    animation-delay: calc(15s / 10 * (10 - 5) * -1);
  }
  
  .item6 {
    animation-delay: calc(15s / 10 * (10 - 6) * -1);
  }
  
  .item7 {
    animation-delay: calc(15s / 10 * (10 - 7) * -1);
  }
  
  .item8 {
    animation-delay: calc(15s / 10 * (10 - 8) * -1);
  }

  .item9 {
    animation-delay: calc(15s / 10 * (10 - 9) * -1);
  }

  .item10 {
    animation-delay: calc(15s / 10 * (10 - 10) * -1);
  }

  


  name{
    font-family: 'Montserrat', sans-serif;
    font-size: 1em;
    font-weight: bold;
    position: absolute;
    text-align: right;
    top: 20px;        /* Adjusts distance from the top */
    right: 20px;       /* Adjusts distance from the left */
    margin: 0;       /* Ensures no extra margin around the title */
    color: #111;
    line-height: 1;
  }

  dice{
    font-family: 'Montserrat', sans-serif;
    font-size: 15em;
    font-weight: bold;
    position: absolute; 
    color: #111;
    line-height: 1;
  }

  a {
    position: relative;
    color: gray; /* Initial color for the link text */
    text-decoration: none; /* Removes the underline */
    font-weight: light;
    display: inline-block;
    overflow: hidden; /* Ensures the rectangle overlay stays within the link boundaries */
  }
  
  a::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: yellow; /* The color of the covering rectangle */
    z-index: 1;
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.1s ease;
  }
  
  a:hover::after {
    transform: scaleX(1); /* Expands the rectangle to cover the text */
  }
   
  a:hover {
    color: transparent; /* Hides the text color on hover */
  }

  header {
    font-family: 'Montserrat', sans-serif;
    /* background-color: #4CAF50; */
    color: black;
    font-size: 1.5em;
  }
  
  p {
    position: relative;
    color: gray; /* Initial color for the link text */
    text-decoration: none; /* Removes the underline */
    font-weight: light;
    /* display: inline-block; */
    overflow: hidden;
  }
  
  .container {
    display: flex;
    align-items: flex-start;
    gap: 20px;
  }
  
  #canvasContainer {
    flex-shrink: 0; 
  }

  .button {
    font-family: 'BerkeleyMono', sans-serif;
    display: inline-block;
    cursor: pointer;
    background: rgb(255, 255, 255);
    border: 1.5px solid black;
    color: rgb(0, 0, 0);
    font-size: 15px;
    font-weight: 500;
    transition: 10ms;
    width: 400px;    
    height: 400px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .button:hover {
    color: white;
    border: none;
    background-color: yellow;
  }

  .button-container {
    display: flex;
    flex-direction: row;
    gap: 20px;
}

  #output {
    width: 300px;
}

/* Main gallery container */
.grid-container {
  display: grid;
  grid-template-columns: repeat(5, 1fr); 
  grid-template-rows: repeat(2, 450px); 
  width: 100%; 
  border: 1px solid white; 
  box-sizing: border-box; 
}

/* Individual object card */
.object-card {
  position: relative; 
  border: 2px solid white;
  border-width: 0 2px 2px 0; 
  overflow: hidden; 
}

/* Remove bottom border for the last row */
.grid-container > .object-card:nth-last-child(-n+5) {
  border-bottom: none;
}

/* Remove right border for the last column in each row */
.grid-container > .object-card:nth-child(5n) {
  border-right: none;
}


.object-image {
  width: 100%;
  height: 100%;
  object-fit: cover; 
  display: block; 
  transition: transform 0.3s ease; 
}

/* Hover effect on card */
.object-card:hover .object-image {
  transform: scale(1.1); 
}

/* Overlay for title and description */
.object-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: hsla(59, 100%, 50%, 0.789); 
  color: black; 
  display: flex; 
  flex-direction: column;
  justify-content: center;
  align-items: center;
  opacity: 0; 
  transition: opacity 0.3s ease; 
  padding: 10px; 
  box-sizing: border-box; 
  text-align: center;
}

/* Show overlay on hover */
.object-card:hover .object-overlay {
  opacity: 1; 
}

/* Title styling */
.object-title {
  font-size: 16px;
  font-weight: bold;
  margin-bottom: 8px;
  color: black;
}

/* Description styling */
.object-description {
  font-size: 14px;
  color: rgb(124, 124, 124);
}

.fullImage {
  position: relative; 
  max-width: 100%; 
  max-height: 70%; 
  margin: auto; 
  display: block; 
  object-fit: contain; 
}